<script id="site-script" src="{{{uiRootPath}}}/js/site.js" data-ui-root-path="{{{uiRootPath}}}"></script>
<script async src="{{{uiRootPath}}}/js/vendor/highlight.js"></script>
<script async src="{{{uiRootPath}}}/js/vendor/tabs.js" data-sync-storage-key="preferred-tab"></script>
{{#if env.ALGOLIA_API_KEY}}
<script src="https://cdn.jsdelivr.net/npm/@docsearch/js@3"></script>
<script>
docsearch({
  container: '#search-field',
  appId: '{{{env.ALGOLIA_APP_ID}}}',
  indexName: '{{{env.ALGOLIA_INDEX_NAME}}}',
  apiKey: '{{{env.ALGOLIA_API_KEY}}}',
  getMissingResultsUrl({ query }) {
    return `https://github.com/JakeSCahill/redpanda-docs-antora/issues/new?title=${query}`;
  },
  resultsFooterComponent({ state }) {
    return {
      // The HTML `tag`
      type: 'a',
      ref: undefined,
      constructor: undefined,
      key: state.query,
      // Its props
      props: {
        href: `/search.html?q=${state.query}`,
        /*onClick: (event) => {
          console.log(JSON.stringify(state,null,2));
        },*/
        // Raw text rendered in the HTML element
        children: `See all ${state.context.nbHits} results`,
      },
      __v: null,
    };
  },
});
</script>
{{/if}}
{{#if page.version }}
<script>
const thumbs = document.querySelectorAll('.thumb');
const positiveModal = document.getElementById('positive');
const negativeModal = document.getElementById('negative');
var currentForm;

thumbs.forEach(function(thumb) {
  thumb.addEventListener('click', function() {
    if (thumb.id.indexOf('up') !== -1) {
      positiveModal.classList.toggle("hidden");
      currentForm = positiveModal
    } else if (thumb.id.indexOf('down') !== -1) {
      negativeModal.classList.toggle("hidden");
      currentForm = negativeModal
    }
  });
});
</script>
<script>
const handleSubmit = function (e) {
  e.preventDefault();
  const currentUrl = '{{{ or site.url siteRootPath }}}{{{ page.url }}}'
  const beta = {{ is-beta page }}
  const version = {{ page.attributes.version }}

  const form = event.target;
  var formData = new FormData(form);

  formData.set('version', version)
  formData.set('url', currentUrl)
  formData.set('beta', beta)

  const formFields = e.target.closest('form')
  const feedback = formFields.querySelector('input[name="feedback"]:checked').value

  formData.set('positiveFeedback', feedback)
  formData.set('otherText', (form.querySelector('textarea[name="otherText"]').value))

  formData.set('email', (form.querySelector('input[name="email"]').value))

  formData.set('date', new Date().toISOString())
  formData.set('navigator', JSON.stringify({
    appName: window.navigator.appName,
    appVersion: window.navigator.appVersion,
    platform: window.navigator.platform,
    userAgent: window.navigator.userAgent,
    language: window.navigator.language
  }))

  fetch("/", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body: new URLSearchParams(formData).toString(),
  }).then(() => {
      console.log('Form submission success')
      clearFeedbackModal()
    })
    .catch(error => {
      console.error('Form submission error:', error)
    })
}
function clearFeedbackModal() {
  var modalBody = currentForm.querySelector('.feedback-modal-body');
  modalBody.innerHTML = `
  {{> feedback-success-modal}}
  `;
}

function closeForm(e) {
  e.preventDefault()
  currentForm.classList.toggle("hidden");
}
</script>
{{/if}}