<script>
const form = document.getElementById('feedbackForm');
const thumbs = document.querySelectorAll('.thumb');
const feedbackDetails = document.getElementById('feedback-details');
const feedbackOptions = document.getElementById('feedback-options');
const feedbackPrompt = document.getElementById('feedback-prompt');
let positive = null;

// Scroll visibility toggle for thumbs
// `passive` signals we never call preventDefault, letting the browser optimise.
// `requestAnimationFrame` throttles DOM writes to one per frame.
document.addEventListener(
  'scroll',
  () => requestAnimationFrame(() => {
    const feedback = document.getElementById('thumbs-toc');
    if (!feedback) return;
    const modifier = 700;
    const documentHeight = document.body.scrollHeight;
    const currentScroll = window.scrollY + window.innerHeight;
    feedback.style.display =
      currentScroll + modifier > documentHeight ? 'none' : 'block';
  }),
  { passive: true }
);

// Handle thumbs click
thumbs.forEach(thumb => {
  thumb.addEventListener('click', () => {
    positive = thumb.id.includes('up');
    form.querySelector('input[name="positiveFeedback"]').value = positive;

    feedbackOptions.innerHTML = positive
      ? `
        <label><input type="radio" name="feedback" value="Solved my problem" checked> Solved my problem</label>
        <label><input type="radio" name="feedback" value="Easy to understand"> Easy to understand</label>
        <label><input type="radio" name="feedback" value="other"> Other</label>
      `
      : `
        <label><input type="radio" name="feedback" value="Not helpful" checked> Not helpful</label>
        <label><input type="radio" name="feedback" value="Too complex"> Too complex</label>
        <label><input type="radio" name="feedback" value="other"> Other</label>
      `;

    feedbackPrompt.textContent = positive
      ? "Let us know what we do well:"
      : "Let us know what could be improved:";

    feedbackDetails.classList.remove('hidden');
    form.classList.remove('hidden');
  });
});

// Fill hidden metadata
form.addEventListener('submit', () => {
  const version = "{{{ page.attributes.version }}}" || "";
  const beta = Boolean({{ is-prerelease page }} || false);
  const url = window.location.href;
  const nav = navigator.userAgent + ', ' + navigator.language;
  const selectedFeedback = form.querySelector('input[name="feedback"]:checked');


  if (selectedFeedback) {
    form.querySelector('input[name="feedback"]').value = selectedFeedback.value;
  }
  form.querySelector('input[name="version"]').value = version;
  form.querySelector('input[name="url"]').value = url;
  form.querySelector('input[name="positiveFeedback"]').value = positive;
  form.querySelector('input[name="beta"]').value = beta;
  form.querySelector('input[name="date"]').value = new Date().toISOString();
  form.querySelector('input[name="navigator"]').value = nav;

  sessionStorage.setItem("feedbackType", positive ? "positive" : "negative");
});

// Handle cancel/close
function closeForm(event) {
  event.preventDefault();
  form.classList.add("hidden");
}

window.addEventListener('DOMContentLoaded', () => {
  const toast = document.getElementById('feedback-toast');
  const modal = document.getElementById('feedbackForm');

  if (window.location.search.includes('success')) {
    if (modal) modal.classList.add('hidden');
    if (toast) {
      toast.classList.remove('hidden');
      setTimeout(() => toast.classList.add('hidden'), 5000); // auto-hide after 5s
    }

    // Remove ?success=true from URL without reload
    const url = new URL(window.location);
    url.searchParams.delete('success');
    window.history.replaceState({}, document.title, url.toString());
  }
});
</script>
